// <auto-generated />
using System;
using AutoScheduler.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoScheduler.DataAccess.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20250504142441_ActivityColumnTypeFix")]
    partial class ActivityColumnTypeFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.ActivityRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("HallSize")
                        .HasColumnType("int");

                    b.Property<string>("HallType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HallTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TimesPerWeek")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("GroupId");

                    b.HasIndex("HallTypeId");

                    b.ToTable("ActivityRequirements");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallTypeId");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.HallType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HallTypes");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeslotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TimeslotId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Timesheets.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Optimized")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Timesheets.Timeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("OptimizationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TimesheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TimesheetId");

                    b.ToTable("Timeslots");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.Activity", b =>
                {
                    b.HasOne("AutoScheduler.Domain.Entities.MemberGroups.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.ActivityRequirements", b =>
                {
                    b.HasOne("AutoScheduler.Domain.Entities.Activities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoScheduler.Domain.Entities.MemberGroups.Group", "Group")
                        .WithMany("Requirements")
                        .HasForeignKey("GroupId");

                    b.HasOne("AutoScheduler.Domain.Entities.Activities.HallType", "Type")
                        .WithMany()
                        .HasForeignKey("HallTypeId");

                    b.Navigation("Activity");

                    b.Navigation("Group");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Activities.Hall", b =>
                {
                    b.HasOne("AutoScheduler.Domain.Entities.Activities.HallType", "Type")
                        .WithMany()
                        .HasForeignKey("HallTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Group", b =>
                {
                    b.HasOne("AutoScheduler.Domain.Entities.MemberGroups.Group", null)
                        .WithMany("SubGroups")
                        .HasForeignKey("GroupId");

                    b.HasOne("AutoScheduler.Domain.Entities.MemberGroups.Organization", null)
                        .WithMany("Groups")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoScheduler.Domain.Entities.Timesheets.Timeslot", null)
                        .WithMany("Groups")
                        .HasForeignKey("TimeslotId");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Timesheets.Timeslot", b =>
                {
                    b.HasOne("AutoScheduler.Domain.Entities.Activities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoScheduler.Domain.Entities.Timesheets.Timesheet", null)
                        .WithMany("Timeslots")
                        .HasForeignKey("TimesheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Group", b =>
                {
                    b.Navigation("Requirements");

                    b.Navigation("SubGroups");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.MemberGroups.Organization", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Timesheets.Timesheet", b =>
                {
                    b.Navigation("Timeslots");
                });

            modelBuilder.Entity("AutoScheduler.Domain.Entities.Timesheets.Timeslot", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
